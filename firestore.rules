rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    /**
     * @description Checks if the user is signed in.
     * @returns {boolean} True if the user is signed in, false otherwise.
     */
    function isSignedIn() {
      return request.auth != null;
    }

    /**
     * @description Checks if the user's UID matches the provided userId.
     * @param {string} userId - The user ID to compare against the request's auth UID.
     * @returns {boolean} True if the user is the owner, false otherwise.
     */
    function isOwner(userId) {
      return isSignedIn() && request.auth.uid == userId;
    }

    /**
     * @description Checks if the user is an admin.
     * @returns {boolean} True if the user is an admin, false otherwise.
     */
    function isAdmin() {
        return isSignedIn() && request.auth.token.role == 'Admin';
    }

    /**
     * @description Rule for user documents.
     * @path /users/{userId}
     * @allow (create) - If the user's UID matches the document ID.
     * @deny (create) - If the user's UID does not match the document ID.
     * @allow (get, update, delete) - If the user is the owner.
     * @deny (get, update, delete) - If the user is not the owner.
     * @principle Enforces document ownership for all operations.
     */
    match /users/{userId} {
      allow get: if isOwner(userId);
      allow list: if false; // Prevent listing all users

      // Allow creation only if the authenticated user's ID matches the userId in the path.
      allow create: if isOwner(userId);
      allow update: if isOwner(userId);
      allow delete: if isOwner(userId);
    }

    /**
     * @description Rule for testReports collection group.
     * @path /testReports/{reportId}
     * @allow (get) - Allow all signed in users to get a test report.
     * @deny (get) - If the user is not signed in.
     * @allow (list) - Allow all signed in users to list test reports.
     * @deny (list) - If the user is not signed in.
     * @deny (create, update, delete) - Always deny writes to testReports.
     * @principle Allows signed in users to read any test report, but only owners can write to them.
     */
    match /testReports/{reportId} {
      allow get: if isSignedIn();
      allow list: if isSignedIn();
      allow create: if isAdmin();
      allow update: if isAdmin();
      allow delete: if isAdmin();
    }
  }
}