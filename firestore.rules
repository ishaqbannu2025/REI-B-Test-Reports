/**
 * @description This ruleset enforces a role-based access control model where 'Admin' users can read all test reports and 'Data Entry User' can read only their own reports.
 * @dataStructure
 *   - /users/{userId}: Stores user profile information, where userId is the Firebase Auth UID.
 *   - /testReports/{reportId}: Represents individual test reports. These are accessed via a collection group query.
 * @keySecurityDecisions
 *   - Admins can list all test reports.
 *   - Data Entry Users can only list test reports created by them.
 * @denormalizationForAuthorization
 *   - The `TestReport` entity has an `enteredBy` field that stores the UID of the user who created the report, which is essential for authorization.
 * @structuralSegregation None.
 */
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    /**
     * @description Allows access to user documents based on ownership.
     * @path /users/{userId}
     * @allow (create) - Authenticated user can create their own user document.
     * @allow (get, list) - Authenticated user can read their own user document.
     * @allow (update, delete) - Authenticated user can update/delete their own user document.
     * @deny (create) - If the user ID in the path does not match the authenticated user's ID.
     * @deny (get, list) - If trying to access another user's document.
     * @deny (update, delete) - If trying to modify another user's document.
     * @principle Enforces user-ownership model.
     */
    match /users/{userId} {
      function isSignedIn() {
        return request.auth != null;
      }
      function isOwner(userId) {
        return request.auth.uid == userId;
      }
      function isExistingOwner(userId) {
        return isOwner(userId) && resource != null;
      }

      allow get, list: if isSignedIn() && isOwner(userId);
      allow create: if isSignedIn() && isOwner(userId);
      allow update: if isSignedIn() && isExistingOwner(userId);
      allow delete: if isSignedIn() && isExistingOwner(userId);
    }

    /**
     * @description Controls access to testReports collection group. Admin users can list all reports. Data entry users can only list reports created by them.
     * @path /testReports (collection group)
     * @allow (list) - Admin users can list all reports.
     * @allow (list) - Data entry users can list reports created by them.
     * @deny (list) - Non-admin users cannot list reports created by other users.
     * @principle Enforces role-based access for listing test reports.
     */
    match /{path=**}/testReports/{reportId} {
       function isSignedIn() {
        return request.auth != null;
      }

      function isAdmin() {
        return request.auth.token.role == 'Admin';
      }

      function isDataEntryUser() {
        return request.auth.token.role == 'Data Entry User';
      }

      allow get: if isAdmin();
      allow list: if isAdmin() || (isSignedIn() && request.auth.uid == resource.data.enteredBy);
      allow create: if isSignedIn() && (isAdmin() || isDataEntryUser());
      allow update: if isSignedIn() && (isAdmin() || request.auth.uid == resource.data.enteredBy);
      allow delete: if isAdmin();
    }
  }
}