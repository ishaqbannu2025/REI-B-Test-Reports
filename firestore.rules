/**
 * @file Firebase Security Rules for Electrical Test Reports
 *
 * @description This ruleset enforces a user-ownership model for test reports with admin override.
 * All data is nested under /users/{userId}, with an additional top-level collection group for admin access.
 *
 * Data Structure:
 * - /users/{userId}: Stores user profile information, where {userId} is the Firebase Auth UID.
 * - /users/{userId}/testReports/{testReportId}: Stores test reports created by a specific user.
 *
 * Key Security Decisions:
 * - User listing is disallowed for privacy.
 * - Admins can view all test reports via collection group queries.
 * - Strict ownership is enforced for creating, updating, and deleting test reports.
 * - Data validation is relaxed in prototyping mode to allow for flexible data shapes,
 *   with the exception of key authorization fields like user IDs.
 *
 * Denormalization for Authorization:
 * - Test reports include an `enteredBy` field that matches the user's UID to simplify ownership checks.
 *
 * Structural Segregation:
 * - Uses a top-level collection group 'testReports' to allow admins to view all reports without compromising user data privacy.
 */
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    /**
     * @description Checks if the request is authenticated.
     */
    function isSignedIn() {
      return request.auth != null;
    }

    /**
     * @description Checks if the authenticated user's UID matches the provided userId.
     */
    function isOwner(userId) {
      return isSignedIn() && request.auth.uid == userId;
    }

    /**
     * @description Checks if the authenticated user's UID matches the userId of an existing document.
     */
    function isExistingOwner(userId) {
      return isOwner(userId) && resource != null;
    }

    /**
     * @description Rules for user profile documents.
     * @path /users/{userId}
     * @allow (create) Authenticated user can create their own profile if the UID matches the document ID.
     * @allow (get) Authenticated user can read their own profile.
     * @deny (list) User listing is not allowed.
     * @deny (create) User cannot create a profile with a mismatched ID.
     * @deny (update) User cannot update a profile with a mismatched ID.
     * @principle Enforces document ownership for writes and restricts access to a user's own data tree.
     */
    match /users/{userId} {
      allow get: if isOwner(userId);
      allow list: if false;
      allow create: if isOwner(userId) && request.resource.data.uid == userId;
      allow update: if isExistingOwner(userId) && request.resource.data.uid == userId;
      allow delete: if false;
    }

    /**
     * @description Rules for test reports within a user's subcollection.
     * @path /users/{userId}/testReports/{testReportId}
     * @allow (create) Authenticated user can create a report under their ID, with matching 'enteredBy' field.
     * @allow (get) Authenticated user can read a report under their ID.
     * @allow (list) Authenticated user can list reports under their ID.
     * @deny (create) User cannot create a report with a mismatched 'enteredBy' field.
     * @deny (update) User cannot update a report if they are not the owner or if the 'enteredBy' field is changed.
     * @principle Enforces document ownership for writes and restricts access to a user's own data tree.
     */
    match /users/{userId}/testReports/{testReportId} {
      allow get: if isOwner(userId);
      allow list: if isOwner(userId);
      allow create: if isOwner(userId) && request.resource.data.enteredBy == userId;
      allow update: if isExistingOwner(userId) && request.resource.data.enteredBy == userId;
      allow delete: if isExistingOwner(userId);
    }

     /**
      * @description Rules for accessing all test reports via collection group query.
      * @path /testReports/{testReportId}
      * @allow (list) Allows listing all test reports.
      * @deny (get) Does not allow getting specific test reports via this path.  Use the user-specific path instead.
      * @principle This path is solely for listing reports and does not provide a mechanism to access specific reports.
      */
    match /{path=**}/testReports/{testReportId} {
         allow get: if false;
         allow list: if true;
         allow create: if false;
         allow update: if false;
         allow delete: if false;
    }
  }
}