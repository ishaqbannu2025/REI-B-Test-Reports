/**
 * @fileoverview Firestore Security Rules for Electrical Test Reports App.
 *
 * Core Philosophy:
 * This ruleset implements a role-based access control system where 'Admin' users have full read and write access,
 * 'Data Entry User' can create new test reports and read data,
 * and anonymous/unauthenticated users can read publicly accessible information.
 * The system relies on Firebase Authentication for user identity and custom claims ('role') to define user privileges.
 *
 * Data Structure:
 * - /users/{userId}: Stores user profile data. 'userId' must match the Firebase Auth UID. Only the user themselves and admins can access this data.
 * - /testReports/{reportId}:  A collection group containing all test reports.
 *
 * Key Security Decisions:
 * - Users can only create their own profile.
 * - Only authenticated users can create test reports
 * - Test reports can be listed by all users.
 *
 * Denormalization for Authorization:
 * - To keep rules simple and efficient, the 'TestReport' document includes the 'enteredBy' field,
 *   which stores the user ID of the report creator. This avoids having to perform expensive `get()` calls to the /users/{userId} collection
 *   to verify ownership.
 */
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    /**
     * @description Grants access to user profiles based on role and identity.
     * @path /users/{userId}
     * @allow (create, update, get) User with matching UID.
     * @deny (create, update, get) User with non-matching UID.
     * @principle Enforces user-ownership for profile data and restricts unauthorized modifications.
     */
    match /users/{userId} {
      function isSignedIn() {
        return request.auth != null;
      }

      function isOwner(userId) {
        return request.auth.uid == userId;
      }

      allow get: if isSignedIn() && isOwner(userId);
      allow list: if false;
      allow create: if isSignedIn() && isOwner(userId);
      allow update: if isSignedIn() && isOwner(userId) && resource.data.uid == userId;
      allow delete: if false;
    }

    /**
     * @description Grants access to testReports collection group
     * @path /testReports/{reportId}
     * @allow (list) All signed in users can list
     * @allow (create) Signed in users can create a new test report.
     * @deny (update, delete) No users can update or delete.
     * @principle Test reports collection group is public readable by all users.
     */
    match /testReports/{reportId} {
      function isSignedIn() {
        return request.auth != null;
      }

      allow get: if isSignedIn();
      allow list: if isSignedIn();
      allow create: if isSignedIn() && request.resource.data.enteredBy == request.auth.uid;
      allow update: if false;
      allow delete: if false;
    }
  }
}